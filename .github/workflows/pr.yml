name: PR
on:
  pull_request:
    types:
      - opened
      - closed
jobs:
  update-pr:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout main branch
        uses: actions/checkout@v2
        with:
          ref: main
      - name: Checkout develop branch
        uses: actions/checkout@v2
        with:
          ref: develop
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          ref: ${{ github.head_ref }}
      - name: Update PR
        run: |
          PR_BRANCH=${{ github.head_ref }}
          PR_BASE=${{ github.base_ref }}
          git fetch origin $PR_BASE
          CHANGELOG=$(git diff origin/$PR_BASE..origin/$PR_BRANCH -- CHANGELOG.rst | grep '^+' | awk 'NR>1' | sed 's/^+//')
          # Extract the most recent version from the CHANGELOG.rst file
          VERSION=$(awk '/^[0-9]+(\.[0-9]+){2}/ { gsub(/[( ].*/, "", $1); print $1; exit }' CHANGELOG.rst)
          PR_TITLE=$(gh pr view ${{ github.event.pull_request.number }} --json title -q '.title')
          if [[ "$PR_BASE" == "develop" && "$PR_BRANCH" == feature-* ]]; then
            PR_TEMPLATE=$(cat .github/PULL_REQUEST_TEMPLATE/feature_to_develop.md)
            ASSIGNEE="kaym9n"
            LABEL="Feature :toolbox:"            
            if [[ ! $PR_TITLE == "[Feature]*" ]]; then
              NEW_TITLE="[Feature] $PR_TITLE"
            fi
          elif [[ "$PR_BASE" == "main" && "$PR_BRANCH" == "develop" ]]; then
            PR_TEMPLATE="${CHANGELOG}\n\n$(cat .github/PULL_REQUEST_TEMPLATE/develop_to_main.md)"
            ASSIGNEE="kaym9n"
            LABEL="Release :rocket:"
            # Set the PR title to "Release {version}"
            NEW_TITLE="Release $VERSION"
          elif [[ "$PR_BASE" == "main" && "$PR_BRANCH" == hotfix-* ]]; then
            PR_TEMPLATE="${CHANGELOG}\n\n$(cat .github/PULL_REQUEST_TEMPLATE/hotfix_to_main.md)"
            ASSIGNEE="kaym9n"
            LABEL="Hotfix :fire:"
            # If the title does not already start with "[Hotfix {version}]", prepend it
            if [[ ! $PR_TITLE == "[Hotfix $VERSION]*" ]]; then
              NEW_TITLE="[Hotfix $VERSION] $PR_TITLE"
            fi
            if [[ "${{ github.event.action }}" == "closed" && "${{ github.event.pull_request.merged }}" == "true" ]]; then
              CHANGELOG=$(git diff origin/develop..origin/$PR_BRANCH -- CHANGELOG.rst | grep '^+' | awk 'NR>1' | sed 's/^+//')
              PR_TEMPLATE="${CHANGELOG}"
              echo -e "$PR_TEMPLATE" > temp.md
              gh pr create --title "Hotfix PR to develop: $PR_BRANCH" --body-file temp.md --assignee $ASSIGNEE --label "$LABEL" --head $PR_BRANCH --base develop
              # NEW_PR_NUMBER=$(gh pr list --limit 1 --json number --jq '.[0].number')
              # gh pr merge $NEW_PR_NUMBER --auto --merge --delete-branch
            fi
          elif [[ "$PR_BASE" != "develop" || "$PR_BRANCH" != hotfix-* ]]; then
            PR_TEMPLATE="잘못된 PR 경로로 PR을 올리셨습니다"
            exit 1
          fi          
          echo -e "$PR_TEMPLATE" > temp.md
          if [[ "${{ github.event.action }}" == "opened" ]]; then
            gh pr edit ${{ github.event.pull_request.number }} --body-file temp.md
            gh pr edit ${{ github.event.pull_request.number }} --add-assignee $ASSIGNEE
            gh pr edit ${{ github.event.pull_request.number }} --add-label "$LABEL"
            if [[ -n "$NEW_TITLE" ]]; then
              gh pr edit ${{ github.event.pull_request.number }} --title "$NEW_TITLE"
            fi
          fi
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}